1.	Какое основное свойство включает CSS Grid и чем принципиально отличается от Flexbox?
CSS Grid — двумерная система компоновки (работает со строками и столбцами одновременно), тогда как Flexbox — одномерная (только одна ось).

2.	В чем разница между grid-template-columns и grid-auto-columns? Когда следует использовать каждое?
grid-template-columns — явное определение размеров и количества колонок. grid-auto-columns — задаёт размер автоматически создаваемых колонок (вне явной сетки). Используйте первое для известной структуры, второе — для динамического контента.

3.	Что делают функции repeat(), minmax() и auto-fit в определении grid-шаблона? Приведите примеры.
repeat() — повторяет шаблон столбцов/строк. minmax() — задаёт диапазон минимального и максимального размера. auto-fit — автоматически размещает столбцы, заполняя доступное пространство.

4.	Как работают именованные grid-области и какие преимущества они дают при создании макетов?
Именованные области позволяют визуально размещать элементы через grid-template-areas. Преимущества: наглядность, лёгкое переопределения макета через медиа-запросы.

5.	Объясните систему нумерации grid-линий и как с помощью grid-column и grid-row размещать элементы.
Сетка имеет пронумерованные линии. grid-column/grid-row размещают элементы между линиями (например, 1 / 3).

6.	Что такое grid-gap (или gap) и чем он лучше margins для создания промежутков в сетке?
gap создаёт отступы только между элементами сетки, не требует обнуления margin и не накапливает отступы по краям контейнера.

7.	Как свойства justify-items и align-items влияют на выравнивание grid-элементов?
justify-items — выравнивание по горизонтали (внутри своей ячейки). align-items — выравнивание по вертикали. Управляют выравниванием содержимого внутри grid-ячеек.

8.	В чем разница между auto-fill и auto-fit при создании адаптивных сеток?
auto-fill — создаёт максимально возможное количество столбцов (даже пустых). auto-fit — растягивает существующие столбцы на всё пространство, игнорируя пустые.

9.	Как создать сложные макеты с помощью grid-template-areas и какие правила именования областей существуют?
Создают семантичные макеты через назначение элементов в именованные области. Правила: прямоугольные области, одинаковые имена для объединения ячеек, точка . для пустых ячеек.

10.	Какие преимущества дает CSS Grid перед другими методами верстки для создания сложных двумерных макетов?
Преимущества: полный контроль над двумерной компоновкой, меньше лишней разметки, гибкое управление размерами и выравниванием, мощные инструменты для адаптивности.
