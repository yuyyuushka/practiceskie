1.	Какое основное свойство CSS включает Flexbox и что происходит с дочерними элементами после его применения?
display: flex - дочерние элементы становятся flex-элементами и выстраиваются вдоль основной оси.

2.	В чем разница между justify-content и align-items? Приведите примеры использования каждого.
justify-content - выравнивание по основной оси, align-items - по поперечной оси.

3.	Что делает свойство flex-direction и какие значения может принимать? Как оно влияет на основную ось?
flex-direction задает направление основной оси. Значения: row, row-reverse, column, column-reverse.

4.	Объясните значение трех свойств в сокращенной записи flex: 1. Что означают flex-grow, flex-shrink и flex-basis?
flex: 1 = flex-grow: 1 (растягивание), flex-shrink: 1 (сжатие), flex-basis: 0 (базовый размер).

5.	Как работает свойство flex-wrap и в каких случаях его следует использовать?
flex-wrap разрешает перенос элементов на новую строку. Используется при нехватке места.

6.	Чем отличается align-content от align-items и когда применяется каждое из этих свойств?
align-items выравнивает элементы в строке, align-content - строки в контейнере (только при переносе).

7.	Как свойство order влияет на отображение элементов и в каких практических ситуациях оно может быть полезно?
order меняет порядок отображения. Полезно для адаптации макета без изменения HTML.

8.	Что такое "осевая линия" (main axis) и поперечная ось (cross axis) в Flexbox и как они связаны с flex-direction?
Основная ось - направление flex-direction, поперечная - перпендикулярно ей. Оси меняются местами при смене направления.

9.	Как создать адаптивный макет с помощью Flexbox без использования медиа-запросов? Приведите пример.
Использовать flex-wrap: wrap и гибкие размеры элементов (flex-grow/flex-basis).

10.	Какие преимущества дает использование gap вместо margins для создания промежутков между flex-элементами?
gap проще в использовании - автоматически создает отступы только между элементами, без сложных margin.

